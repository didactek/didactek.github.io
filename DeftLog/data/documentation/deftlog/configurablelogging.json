{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Logging systems encourage developers to consider the conditions under which a"},{"type":"text","text":" "},{"type":"text","text":"message should be logged. An important factor in this encouragement is a"},{"type":"text","text":" "},{"type":"text","text":"mechanism that allows logging to be turned off for messages that don’t meet"},{"type":"text","text":" "},{"type":"text","text":"a threshold that the developer may adjust during the development lifecycle."},{"type":"text","text":" "},{"type":"text","text":"Highly-detailed messages that are added to the source during debugging can"},{"type":"text","text":" "},{"type":"text","text":"be left in place when the debugging is over: the developer simply adjusts the log"},{"type":"text","text":" "},{"type":"text","text":"level so the messages no longer distract from output. Non-logged messages incur"},{"type":"text","text":" "},{"type":"text","text":"very little overhead. The messages can be quickly re-enabled if they are needed for"},{"type":"text","text":" "},{"type":"text","text":"future debugging work."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Some log systems allow user access to the latent messages that are ordinarily"},{"type":"text","text":" "},{"type":"text","text":"below the reporting threshold. This can be helpful when:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"debugging a system that is not working"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"adopting a library whose mechanics and requisites are unfamiliar"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"or simply: seeking to learn more about a system"}]}]}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An example of late-configuration logging is the macOS "},{"type":"codeVoice","code":"log"},{"type":"text","text":" utility"},{"type":"text","text":" "},{"type":"text","text":"(notably its "},{"type":"codeVoice","code":"stream --level"},{"type":"text","text":"\/"},{"type":"codeVoice","code":"--type"},{"type":"text","text":" options) that let administrators"},{"type":"text","text":" "},{"type":"text","text":"access additional logging detail for processes that use some system"},{"type":"text","text":" "},{"type":"text","text":"logging libraries."}]}],"type":"aside","name":"Note"},{"anchor":"Configuration-in-swift-log","level":2,"type":"heading","text":"Configuration in swift-log"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In swift-log, the decision about whether to log a message is made by each logger;"},{"type":"text","text":" "},{"type":"text","text":"an extension of Logger checks the message against each instance’s logLevel and"},{"type":"text","text":" "},{"type":"text","text":"does not forward the message to the log hander if the message does not reach the"},{"type":"text","text":" "},{"type":"text","text":"configured threshold. LogLevel is intended to be part of the Logger state; implementors"},{"type":"text","text":" "},{"type":"text","text":"of alternate Loggers are discouraged from centrally adjusting logLevel."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"swift-log doesn’t suggest any particular pattern for setting logLevel. For implementors"},{"type":"text","text":" "},{"type":"text","text":"of package libraries who want to allow library consumers to adjust logLevel, they are left"},{"type":"text","text":" "},{"type":"text","text":"on their own to expose a mechanism to set logLevel for private Loggers."}]},{"anchor":"DeftLog","level":2,"type":"heading","text":"DeftLog"},{"type":"paragraph","inlineContent":[{"type":"text","text":"DeftLog lets the main runtime describe desired log levels early in execution, and"},{"type":"text","text":" "},{"type":"text","text":"then the library’s Logger factory will offer Loggers to the implementor that default to the"},{"type":"text","text":" "},{"type":"text","text":"logLevel specified "},{"type":"emphasis","inlineContent":[{"type":"text","text":"by the main executable"}]},{"type":"text","text":"."}]},{"anchor":"Configuring","level":3,"type":"heading","text":"Configuring"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Near the start of the program–before libraries start requesting their loggers–describe"},{"type":"text","text":" "},{"type":"text","text":"any log level overrides according to the Logger label prefix:"}]},{"type":"codeListing","syntax":"swift","code":["DeftLog.settings = [","    (\"com.didactek.deft-log\", .critical),","    (\"com.didactek.deft-mcp2221.usb\", .trace),","    (\"com.didactek.deft-mcp2221\", .debug),","]"]},{"anchor":"Adopting","level":3,"type":"heading","text":"Adopting"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Simply obtain the logger from DeftLog:"}]},{"type":"codeListing","syntax":"swift","code":["\/\/ Will be .debug using above settings","let logger = DeftLog.logger(label: \"com.didactek.deft-mcp2221.hidapi\")"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This replaces the typical "},{"type":"codeVoice","code":"var logger = Logger(label: \"com.didactek.deft-mcp2221.hidapi\")"},{"type":"text","text":" "},{"type":"text","text":"file-level declaration that is often paired somewhere else with setting the log level"},{"type":"text","text":" "},{"type":"text","text":"("},{"type":"codeVoice","code":"logger.logLevel = .debug"},{"type":"text","text":"). Note the logger can usually be a "},{"type":"codeVoice","code":"let"},{"type":"text","text":", since its logLevel"},{"type":"text","text":" "},{"type":"text","text":"is pre-set and there should not be a need to change it."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/deftlog\/configurablelogging"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/DeftLog\/documentation\/DeftLog\/ConfigurableLogging","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Swift-log classifies messages by severity and provides each Logger a logLevel"},{"type":"text","text":" "},{"type":"text","text":"to suppress messages that don’t meet a severity threshold. DeftLog lets Logger"},{"type":"text","text":" "},{"type":"text","text":"clients opt in to centralized control of logLevel, and lets users of an application"},{"type":"text","text":" "},{"type":"text","text":"set Logger attenuation threshold at runtime without modifying library source."}],"kind":"article","metadata":{"modules":[{"name":"DeftLog"}],"role":"collectionGroup","title":"Configurable Logging"},"hierarchy":{"paths":[["doc:\/\/DeftLog\/documentation\/DeftLog"]]},"topicSections":[{"title":"Configuring DeftLog Logger Output","identifiers":["doc:\/\/DeftLog\/documentation\/DeftLog\/DeftLog\/settings"]},{"title":"Adopting DeftLog","identifiers":["doc:\/\/DeftLog\/documentation\/DeftLog\/DeftLog\/logger(label:)"]}],"references":{"doc://DeftLog/documentation/DeftLog/DeftLog/settings":{"role":"symbol","title":"settings","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"settings"},{"kind":"text","text":": [(prefix"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", level"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Logger","preciseIdentifier":"s:7Logging6LoggerV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Level","preciseIdentifier":"s:7Logging6LoggerV5LevelO"},{"kind":"text","text":")]"}],"abstract":[{"type":"text","text":"Configure log levels for Loggers obtained via DeftLog."}],"identifier":"doc:\/\/DeftLog\/documentation\/DeftLog\/DeftLog\/settings","kind":"symbol","type":"topic","url":"\/documentation\/deftlog\/deftlog\/settings"},"doc://DeftLog/documentation/DeftLog":{"role":"collection","title":"DeftLog","abstract":[{"type":"text","text":"Centrally configure swift-log logLevel threshold based on logger label."}],"identifier":"doc:\/\/DeftLog\/documentation\/DeftLog","kind":"symbol","type":"topic","url":"\/documentation\/deftlog"},"doc://DeftLog/documentation/DeftLog/DeftLog/logger(label:)":{"role":"symbol","title":"logger(label:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"logger"},{"kind":"text","text":"("},{"kind":"externalParam","text":"label"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Logger","preciseIdentifier":"s:7Logging6LoggerV"}],"abstract":[{"type":"text","text":"Create a new "},{"type":"codeVoice","code":"Logger"},{"type":"text","text":" and set its "},{"type":"codeVoice","code":"logLevel"},{"type":"text","text":"."}],"identifier":"doc:\/\/DeftLog\/documentation\/DeftLog\/DeftLog\/logger(label:)","kind":"symbol","type":"topic","url":"\/documentation\/deftlog\/deftlog\/logger(label:)"}}}