{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"OBSAsyncAPI provides an idiomatic Swift interface to an"},{"type":"text","text":" "},{"type":"text","text":"underlying, strongly-typed OBSWebsocket implementation."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"OBS requests are made using async\/try await on "},{"type":"reference","isActive":true,"identifier":"doc:\/\/OBSAsyncAPI\/documentation\/OBSAsyncAPI\/OBSClient"},{"type":"text","text":" methods."},{"type":"text","text":" "},{"type":"text","text":"While the calling function waits, the framework sends the message to"},{"type":"text","text":" "},{"type":"text","text":"the OBS server, then returns to monitoring the messages from OBS."},{"type":"text","text":" "},{"type":"text","text":"Once the response corresponding to the request arrives, the framework"},{"type":"text","text":" "},{"type":"text","text":"continues the waiting function with the result from the server."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"An OBSClient object also provides "},{"type":"reference","isActive":true,"identifier":"doc:\/\/OBSAsyncAPI\/documentation\/OBSAsyncAPI\/OBSClient\/events"},{"type":"text","text":", which is a"},{"type":"text","text":" "},{"type":"text","text":"Combine publisher for subscribed OBS events."}]},{"anchor":"Usage","level":2,"type":"heading","text":"Usage"},{"type":"codeListing","syntax":"swift","code":["import Foundation","import OBSAsyncAPI","","let client = OBSClient(port: 4655, password: \"abc\")","try! await client.connect()","let scenes = try! await client.getSceneList()","for scene in scenes.scenes {","    print(scene.sceneName)","}"]},{"anchor":"Types","level":2,"type":"heading","text":"Types"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Both events and request responses are communicated by the API as structs"},{"type":"text","text":" "},{"type":"text","text":"defined and documented in the OBSWebsocket module."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In general, these are structs with fields that correspond to the fields"},{"type":"text","text":" "},{"type":"text","text":"described in obs-websocket documentation."}]},{"anchor":"OBSUntypedObject","level":3,"type":"heading","text":"“OBSUntypedObject”"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The obs-websocket describes some values as having type “Object”: these"},{"type":"text","text":" "},{"type":"text","text":"are JSON dictionaries where no commitment is made by the OBS specification about"},{"type":"text","text":" "},{"type":"text","text":"the names of the keys, the types for values, or consistency of representation"},{"type":"text","text":" "},{"type":"text","text":"from call to call."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"“Object” is used in request arguments, request responses, and in events."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The OBSWebsocket module hardcodes additional knowledge about some of"},{"type":"text","text":" "},{"type":"text","text":"these cases, and tries to use richer, full-typed structs where possible."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In all other cases, the API uses OBSUntypedObject to represent these objects."},{"type":"text","text":" "},{"type":"text","text":"OBSUntypedObject represents the nested\/hierarchical key\/value dictionaries"},{"type":"text","text":" "},{"type":"text","text":"typical of obs-websocket Object types."}]},{"anchor":"Requests","level":2,"type":"heading","text":"Requests"},{"anchor":"Parse-errors","level":3,"type":"heading","text":"Parse errors"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the OBS response to a request can’t be parsed, the response"},{"type":"text","text":" "},{"type":"text","text":"JSON text is included in a"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/OBSAsyncAPI\/documentation\/OBSAsyncAPI\/APIError\/jsonParseError(encapsulateError:source:)"},{"type":"text","text":" exception object."},{"type":"text","text":" "},{"type":"text","text":"The implementor may catch this exception and parse the JSON on their own."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This pattern gives the implementor a chance to soften any"},{"type":"text","text":" "},{"type":"text","text":"brittleness that comes with the strongly-typed API."}]},{"anchor":"Limitations","level":3,"type":"heading","text":"Limitations"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Batch requests (and their responses) are not implemented."}]},{"anchor":"Events","level":2,"type":"heading","text":"Events"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Events are published on the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/OBSAsyncAPI\/documentation\/OBSAsyncAPI\/OBSClient\/events"},{"type":"text","text":" attribute."}]},{"anchor":"Event-Example","level":3,"type":"heading","text":"Event Example"},{"type":"codeListing","syntax":"swift","code":["import Foundation","import Combine","import OBSAsyncAPI","","var subscriptions = Set<AnyCancellable>()","","let client = OBSClient(port: 4655, password: \"abc\",","                       eventSubscriptions: .allLowVolume)","","client.events.sink { event in","        switch(event) {","        case .currentPreviewSceneChanged(let info):","            print(\"Scene changed to \\(info.sceneName)\")","        default: break","        }","    }","    .store(in: &subscriptions)","","try! await client.connect()","","\/\/ Listen a little bit for messages","try await Task.sleep(nanoseconds: 10_000_000_000)"]},{"anchor":"Logging","level":2,"type":"heading","text":"Logging"},{"type":"paragraph","inlineContent":[{"type":"text","text":"OBSAsyncAPI uses DeftLog to set its log level on startup. The identifier for"},{"type":"text","text":" "},{"type":"text","text":"all messages is “com.didactek.obswebsocket”."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"DeftLog uses an ordered configuration that associates identifier prefixes"},{"type":"text","text":" "},{"type":"text","text":"with a log level."},{"type":"text","text":" "},{"type":"text","text":"To use DeftLog, set this "},{"type":"text","text":"DeftLog.settings"},{"type":"text","text":" configuration before"},{"type":"text","text":" "},{"type":"text","text":"libraries start requesting their loggers."}]},{"type":"codeListing","syntax":"swift","code":["import DeftLog","","@main","struct StudioClientApp: App {","    let obs: OBSClient","    init() {","        DeftLog.settings = [","            (\"com.didactek.obswebsocket\", .trace),","            (\"com.didactek\", .debug),","        ]","\tobs = OBSClient(port: 4655, password: \"abc\")","    }","}"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/obsasyncapi"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/OBSAsyncAPI\/documentation\/OBSAsyncAPI","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A Swift async interface to OBS using OBS Websockets."}],"kind":"symbol","metadata":{"roleHeading":"Framework","externalID":"OBSAsyncAPI","title":"OBSAsyncAPI","symbolKind":"module","role":"collection","modules":[{"name":"OBSAsyncAPI"}]},"hierarchy":{"paths":[[]]},"topicSections":[{"title":"Client","identifiers":["doc:\/\/OBSAsyncAPI\/documentation\/OBSAsyncAPI\/OBSClient"]},{"title":"Enumerations","identifiers":["doc:\/\/OBSAsyncAPI\/documentation\/OBSAsyncAPI\/APIError"]}],"references":{"doc://OBSAsyncAPI/documentation/OBSAsyncAPI":{"role":"collection","title":"OBSAsyncAPI","abstract":[{"type":"text","text":"A Swift async interface to OBS using OBS Websockets."}],"identifier":"doc:\/\/OBSAsyncAPI\/documentation\/OBSAsyncAPI","kind":"symbol","type":"topic","url":"\/documentation\/obsasyncapi"},"doc://OBSAsyncAPI/documentation/OBSAsyncAPI/APIError/jsonParseError(encapsulateError:source:)":{"role":"symbol","title":"APIError.jsonParseError(encapsulateError:source:)","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"jsonParseError"},{"kind":"text","text":"("},{"kind":"externalParam","text":"encapsulateError"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":", "},{"kind":"externalParam","text":"source"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"A response could not be decoded by the strongly-typed API. The server JSON"},{"type":"text","text":" "},{"type":"text","text":"is supplied in case the caller can try a different decoding."}],"identifier":"doc:\/\/OBSAsyncAPI\/documentation\/OBSAsyncAPI\/APIError\/jsonParseError(encapsulateError:source:)","kind":"symbol","type":"topic","url":"\/documentation\/obsasyncapi\/apierror\/jsonparseerror(encapsulateerror:source:)"},"doc://OBSAsyncAPI/documentation/OBSAsyncAPI/APIError":{"role":"symbol","title":"APIError","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"APIError"}],"abstract":[{"type":"text","text":"Errors thrown by OBSAsyncAPI."}],"identifier":"doc:\/\/OBSAsyncAPI\/documentation\/OBSAsyncAPI\/APIError","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"APIError"}],"url":"\/documentation\/obsasyncapi\/apierror"},"doc://OBSAsyncAPI/documentation/OBSAsyncAPI/OBSClient/events":{"role":"symbol","title":"events","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"events"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"PassthroughSubject","preciseIdentifier":"s:7Combine18PassthroughSubjectC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"OBSEvent","preciseIdentifier":"s:12OBSWebsocket8OBSEventO"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Never","preciseIdentifier":"s:s5NeverO"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Publisher of events received from the OBS server."}],"identifier":"doc:\/\/OBSAsyncAPI\/documentation\/OBSAsyncAPI\/OBSClient\/events","kind":"symbol","type":"topic","url":"\/documentation\/obsasyncapi\/obsclient\/events"},"doc://OBSAsyncAPI/documentation/OBSAsyncAPI/OBSClient":{"role":"symbol","title":"OBSClient","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"OBSClient"}],"abstract":[{"type":"text","text":"The object that establishes a connection to an obs-websocket server and provides"},{"type":"text","text":" "},{"type":"text","text":"methods for using the websocket services."}],"identifier":"doc:\/\/OBSAsyncAPI\/documentation\/OBSAsyncAPI\/OBSClient","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"OBSClient"}],"url":"\/documentation\/obsasyncapi\/obsclient"}}}