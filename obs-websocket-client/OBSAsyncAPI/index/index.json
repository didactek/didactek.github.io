{"interfaceLanguages":{"swift":[{"children":[{"title":"Client","type":"groupMarker"},{"children":[{"title":"Connecting","type":"groupMarker"},{"path":"\/documentation\/obsasyncapi\/obsclient\/init(hostname:port:connecttimeout:password:eventsubscriptions:)","title":"init(hostname: String?, port: Int?, connectTimeout: DispatchQueue.SchedulerTimeType.Stride?, password: String?, eventSubscriptions: EventSubscription)","type":"init"},{"path":"\/documentation\/obsasyncapi\/obsclient\/connect()","title":"func connect() async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/isconnected","title":"let isConnected: CurrentValueSubject<Bool, Never>","type":"property"},{"path":"\/documentation\/obsasyncapi\/obsclient\/connecttimeout","title":"var connectTimeout: DispatchQueue.SchedulerTimeType.Stride","type":"property"},{"title":"Events","type":"groupMarker"},{"path":"\/documentation\/obsasyncapi\/obsclient\/events","title":"let events: PassthroughSubject<OBSEvent, Never>","type":"property"},{"path":"\/documentation\/obsasyncapi\/obsclient\/eventsubscriptions","title":"var eventSubscriptions: EventSubscription","type":"property"},{"title":"General Requests","type":"groupMarker"},{"path":"\/documentation\/obsasyncapi\/obsclient\/getversion()","title":"func getVersion() async throws -> OBSResponse.GetVersion","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/getstats()","title":"func getStats() async throws -> OBSResponse.GetStats","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/broadcastcustomevent(eventdata:)","title":"func broadcastCustomEvent(eventData: OBSUntypedObject) async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/callvendorrequest(vendorname:requesttype:requestdata:)","title":"func callVendorRequest(vendorName: String, requestType: String, requestData: OBSUntypedObject?) async throws -> OBSResponse.CallVendorRequest","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/gethotkeylist()","title":"func getHotkeyList() async throws -> [String]","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/triggerhotkeybyname(hotkeyname:)","title":"func triggerHotkeyByName(hotkeyName: String) async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/triggerhotkeybykeysequence(keyid:keymodifiers:)","title":"func triggerHotkeyByKeySequence(keyId: String?, keyModifiers: KeyModifiers?) async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/sleep(sleepmillis:sleepframes:)","title":"func sleep(sleepMillis: Double?, sleepFrames: Double?) async throws","type":"method"},{"title":"Scene Requests","type":"groupMarker"},{"path":"\/documentation\/obsasyncapi\/obsclient\/getscenelist()","title":"func getSceneList() async throws -> OBSResponse.GetSceneList","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/getgrouplist()","title":"func getGroupList() async throws -> [String]","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/getcurrentprogramscene()","title":"func getCurrentProgramScene() async throws -> String","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/setcurrentprogramscene(scenename:)","title":"func setCurrentProgramScene(sceneName: String) async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/getcurrentpreviewscene()","title":"func getCurrentPreviewScene() async throws -> String","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/setcurrentpreviewscene(scenename:)","title":"func setCurrentPreviewScene(sceneName: String) async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/createscene(scenename:)","title":"func createScene(sceneName: String) async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/removescene(scenename:)","title":"func removeScene(sceneName: String) async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/setscenename(scenename:newscenename:)","title":"func setSceneName(sceneName: String, newSceneName: String) async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/getscenescenetransitionoverride(scenename:)","title":"func getSceneSceneTransitionOverride(sceneName: String) async throws -> OBSResponse.GetSceneSceneTransitionOverride","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/setscenescenetransitionoverride(scenename:transitionname:transitionduration:)","title":"func setSceneSceneTransitionOverride(sceneName: String, transitionName: String?, transitionDuration: Double?) async throws","type":"method"},{"title":"Record Requests","type":"groupMarker"},{"path":"\/documentation\/obsasyncapi\/obsclient\/getrecordstatus()","title":"func getRecordStatus() async throws -> OBSResponse.GetRecordStatus","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/togglerecord()","title":"func toggleRecord() async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/startrecord()","title":"func startRecord() async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/stoprecord()","title":"func stopRecord() async throws -> String","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/togglerecordpause()","title":"func toggleRecordPause() async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/pauserecord()","title":"func pauseRecord() async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/resumerecord()","title":"func resumeRecord() async throws","type":"method"},{"title":"Config Requests","type":"groupMarker"},{"path":"\/documentation\/obsasyncapi\/obsclient\/getpersistentdata(realm:slotname:)","title":"func getPersistentData(realm: String, slotName: String) async throws -> OBSUntypedObject","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/setpersistentdata(realm:slotname:slotvalue:)","title":"func setPersistentData(realm: String, slotName: String, slotValue: OBSUntypedObject) async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/getscenecollectionlist()","title":"func getSceneCollectionList() async throws -> OBSResponse.GetSceneCollectionList","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/setcurrentscenecollection(scenecollectionname:)","title":"func setCurrentSceneCollection(sceneCollectionName: String) async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/createscenecollection(scenecollectionname:)","title":"func createSceneCollection(sceneCollectionName: String) async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/getprofilelist()","title":"func getProfileList() async throws -> OBSResponse.GetProfileList","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/setcurrentprofile(profilename:)","title":"func setCurrentProfile(profileName: String) async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/createprofile(profilename:)","title":"func createProfile(profileName: String) async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/removeprofile(profilename:)","title":"func removeProfile(profileName: String) async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/getprofileparameter(parametercategory:parametername:)","title":"func getProfileParameter(parameterCategory: String, parameterName: String) async throws -> OBSResponse.GetProfileParameter","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/setprofileparameter(parametercategory:parametername:parametervalue:)","title":"func setProfileParameter(parameterCategory: String, parameterName: String, parameterValue: String) async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/getvideosettings()","title":"func getVideoSettings() async throws -> OBSResponse.GetVideoSettings","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/setvideosettings(fpsnumerator:fpsdenominator:basewidth:baseheight:outputwidth:outputheight:)","title":"func setVideoSettings(fpsNumerator: Double?, fpsDenominator: Double?, baseWidth: Double?, baseHeight: Double?, outputWidth: Double?, outputHeight: Double?) async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/getstreamservicesettings()","title":"func getStreamServiceSettings() async throws -> OBSResponse.GetStreamServiceSettings","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/setstreamservicesettings(streamservicetype:streamservicesettings:)","title":"func setStreamServiceSettings(streamServiceType: String, streamServiceSettings: OBSUntypedObject) async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/getrecorddirectory()","title":"func getRecordDirectory() async throws -> String","type":"method"},{"title":"Source Requests","type":"groupMarker"},{"path":"\/documentation\/obsasyncapi\/obsclient\/getsourceactive(sourcename:)","title":"func getSourceActive(sourceName: String) async throws -> OBSResponse.GetSourceActive","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/getsourcescreenshot(sourcename:imageformat:imagewidth:imageheight:imagecompressionquality:)","title":"func getSourceScreenshot(sourceName: String, imageFormat: String, imageWidth: Double?, imageHeight: Double?, imageCompressionQuality: Double?) async throws -> String","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/savesourcescreenshot(sourcename:imageformat:imagefilepath:imagewidth:imageheight:imagecompressionquality:)","title":"func saveSourceScreenshot(sourceName: String, imageFormat: String, imageFilePath: String, imageWidth: Double?, imageHeight: Double?, imageCompressionQuality: Double?) async throws -> String","type":"method"},{"title":"UI Requests","type":"groupMarker"},{"path":"\/documentation\/obsasyncapi\/obsclient\/getstudiomodeenabled()","title":"func getStudioModeEnabled() async throws -> Bool","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/setstudiomodeenabled(studiomodeenabled:)","title":"func setStudioModeEnabled(studioModeEnabled: Bool) async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/openinputpropertiesdialog(inputname:)","title":"func openInputPropertiesDialog(inputName: String) async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/openinputfiltersdialog(inputname:)","title":"func openInputFiltersDialog(inputName: String) async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/openinputinteractdialog(inputname:)","title":"func openInputInteractDialog(inputName: String) async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/getmonitorlist()","title":"func getMonitorList() async throws -> [OBSUntypedObject]","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/openvideomixprojector(videomixtype:monitorindex:projectorgeometry:)","title":"func openVideoMixProjector(videoMixType: String, monitorIndex: Int?, projectorGeometry: String?) async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/opensourceprojector(sourcename:monitorindex:projectorgeometry:)","title":"func openSourceProjector(sourceName: String, monitorIndex: Int?, projectorGeometry: String?) async throws","type":"method"},{"title":"Filter Requests","type":"groupMarker"},{"path":"\/documentation\/obsasyncapi\/obsclient\/getsourcefilterlist(sourcename:)","title":"func getSourceFilterList(sourceName: String) async throws -> [OBSUntypedObject]","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/getsourcefilterdefaultsettings(filterkind:)","title":"func getSourceFilterDefaultSettings(filterKind: String) async throws -> OBSUntypedObject","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/createsourcefilter(sourcename:filtername:filterkind:filtersettings:)","title":"func createSourceFilter(sourceName: String, filterName: String, filterKind: String, filterSettings: OBSUntypedObject?) async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/removesourcefilter(sourcename:filtername:)","title":"func removeSourceFilter(sourceName: String, filterName: String) async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/setsourcefiltername(sourcename:filtername:newfiltername:)","title":"func setSourceFilterName(sourceName: String, filterName: String, newFilterName: String) async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/getsourcefilter(sourcename:filtername:)","title":"func getSourceFilter(sourceName: String, filterName: String) async throws -> OBSResponse.GetSourceFilter","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/setsourcefilterindex(sourcename:filtername:filterindex:)","title":"func setSourceFilterIndex(sourceName: String, filterName: String, filterIndex: Int) async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/setsourcefiltersettings(sourcename:filtername:filtersettings:overlay:)","title":"func setSourceFilterSettings(sourceName: String, filterName: String, filterSettings: OBSUntypedObject, overlay: Bool?) async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/setsourcefilterenabled(sourcename:filtername:filterenabled:)","title":"func setSourceFilterEnabled(sourceName: String, filterName: String, filterEnabled: Bool) async throws","type":"method"},{"title":"Output Requests","type":"groupMarker"},{"path":"\/documentation\/obsasyncapi\/obsclient\/getvirtualcamstatus()","title":"func getVirtualCamStatus() async throws -> Bool","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/togglevirtualcam()","title":"func toggleVirtualCam() async throws -> Bool","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/startvirtualcam()","title":"func startVirtualCam() async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/stopvirtualcam()","title":"func stopVirtualCam() async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/getreplaybufferstatus()","title":"func getReplayBufferStatus() async throws -> Bool","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/togglereplaybuffer()","title":"func toggleReplayBuffer() async throws -> Bool","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/startreplaybuffer()","title":"func startReplayBuffer() async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/stopreplaybuffer()","title":"func stopReplayBuffer() async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/savereplaybuffer()","title":"func saveReplayBuffer() async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/getlastreplaybufferreplay()","title":"func getLastReplayBufferReplay() async throws -> String","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/getoutputlist()","title":"func getOutputList() async throws -> [OBSUntypedObject]","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/getoutputstatus(outputname:)","title":"func getOutputStatus(outputName: String) async throws -> OBSResponse.GetOutputStatus","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/toggleoutput(outputname:)","title":"func toggleOutput(outputName: String) async throws -> Bool","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/startoutput(outputname:)","title":"func startOutput(outputName: String) async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/stopoutput(outputname:)","title":"func stopOutput(outputName: String) async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/getoutputsettings(outputname:)","title":"func getOutputSettings(outputName: String) async throws -> OBSUntypedObject","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/setoutputsettings(outputname:outputsettings:)","title":"func setOutputSettings(outputName: String, outputSettings: OBSUntypedObject) async throws","type":"method"},{"title":"Scene Item Requests","type":"groupMarker"},{"path":"\/documentation\/obsasyncapi\/obsclient\/getsceneitemlist(scenename:)","title":"func getSceneItemList(sceneName: String) async throws -> [SceneSource]","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/getgroupsceneitemlist(scenename:)","title":"func getGroupSceneItemList(sceneName: String) async throws -> [SceneSource]","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/getsceneitemid(scenename:sourcename:searchoffset:)","title":"func getSceneItemId(sceneName: String, sourceName: String, searchOffset: Double?) async throws -> Int","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/createsceneitem(scenename:sourcename:sceneitemenabled:)","title":"func createSceneItem(sceneName: String, sourceName: String, sceneItemEnabled: Bool?) async throws -> Int","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/removesceneitem(scenename:sceneitemid:)","title":"func removeSceneItem(sceneName: String, sceneItemId: Int) async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/duplicatesceneitem(scenename:sceneitemid:destinationscenename:)","title":"func duplicateSceneItem(sceneName: String, sceneItemId: Int, destinationSceneName: String?) async throws -> Int","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/getsceneitemtransform(scenename:sceneitemid:)","title":"func getSceneItemTransform(sceneName: String, sceneItemId: Int) async throws -> OBSUntypedObject","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/setsceneitemtransform(scenename:sceneitemid:sceneitemtransform:)","title":"func setSceneItemTransform(sceneName: String, sceneItemId: Int, sceneItemTransform: SceneItemTransform) async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/getsceneitemenabled(scenename:sceneitemid:)","title":"func getSceneItemEnabled(sceneName: String, sceneItemId: Int) async throws -> Bool","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/setsceneitemenabled(scenename:sceneitemid:sceneitemenabled:)","title":"func setSceneItemEnabled(sceneName: String, sceneItemId: Int, sceneItemEnabled: Bool) async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/getsceneitemlocked(scenename:sceneitemid:)","title":"func getSceneItemLocked(sceneName: String, sceneItemId: Int) async throws -> Bool","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/setsceneitemlocked(scenename:sceneitemid:sceneitemlocked:)","title":"func setSceneItemLocked(sceneName: String, sceneItemId: Int, sceneItemLocked: Bool) async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/getsceneitemindex(scenename:sceneitemid:)","title":"func getSceneItemIndex(sceneName: String, sceneItemId: Int) async throws -> Int","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/setsceneitemindex(scenename:sceneitemid:sceneitemindex:)","title":"func setSceneItemIndex(sceneName: String, sceneItemId: Int, sceneItemIndex: Int) async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/getsceneitemblendmode(scenename:sceneitemid:)","title":"func getSceneItemBlendMode(sceneName: String, sceneItemId: Int) async throws -> String","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/setsceneitemblendmode(scenename:sceneitemid:sceneitemblendmode:)","title":"func setSceneItemBlendMode(sceneName: String, sceneItemId: Int, sceneItemBlendMode: String) async throws","type":"method"},{"title":"Media Input Requests","type":"groupMarker"},{"path":"\/documentation\/obsasyncapi\/obsclient\/getmediainputstatus(inputname:)","title":"func getMediaInputStatus(inputName: String) async throws -> OBSResponse.GetMediaInputStatus","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/setmediainputcursor(inputname:mediacursor:)","title":"func setMediaInputCursor(inputName: String, mediaCursor: Double) async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/offsetmediainputcursor(inputname:mediacursoroffset:)","title":"func offsetMediaInputCursor(inputName: String, mediaCursorOffset: Double) async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/triggermediainputaction(inputname:mediaaction:)","title":"func triggerMediaInputAction(inputName: String, mediaAction: String) async throws","type":"method"},{"title":"Stream Requests","type":"groupMarker"},{"path":"\/documentation\/obsasyncapi\/obsclient\/getstreamstatus()","title":"func getStreamStatus() async throws -> OBSResponse.GetStreamStatus","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/togglestream()","title":"func toggleStream() async throws -> Bool","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/startstream()","title":"func startStream() async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/stopstream()","title":"func stopStream() async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/sendstreamcaption(captiontext:)","title":"func sendStreamCaption(captionText: String) async throws","type":"method"},{"title":"Transition Requests","type":"groupMarker"},{"path":"\/documentation\/obsasyncapi\/obsclient\/gettransitionkindlist()","title":"func getTransitionKindList() async throws -> [String]","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/getscenetransitionlist()","title":"func getSceneTransitionList() async throws -> OBSResponse.GetSceneTransitionList","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/getcurrentscenetransition()","title":"func getCurrentSceneTransition() async throws -> OBSResponse.GetCurrentSceneTransition","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/setcurrentscenetransition(transitionname:)","title":"func setCurrentSceneTransition(transitionName: String) async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/setcurrentscenetransitionduration(transitionduration:)","title":"func setCurrentSceneTransitionDuration(transitionDuration: Double) async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/setcurrentscenetransitionsettings(transitionsettings:overlay:)","title":"func setCurrentSceneTransitionSettings(transitionSettings: OBSUntypedObject, overlay: Bool?) async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/getcurrentscenetransitioncursor()","title":"func getCurrentSceneTransitionCursor() async throws -> Double","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/triggerstudiomodetransition()","title":"func triggerStudioModeTransition() async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/settbarposition(position:release:)","title":"func setTBarPosition(position: Double, release: Bool?) async throws","type":"method"},{"title":"Input Requests","type":"groupMarker"},{"path":"\/documentation\/obsasyncapi\/obsclient\/getinputlist(inputkind:)","title":"func getInputList(inputKind: String?) async throws -> [OBSUntypedObject]","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/getinputkindlist(unversioned:)","title":"func getInputKindList(unversioned: Bool?) async throws -> [String]","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/getspecialinputs()","title":"func getSpecialInputs() async throws -> OBSResponse.GetSpecialInputs","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/createinput(scenename:inputname:inputkind:inputsettings:sceneitemenabled:)","title":"func createInput(sceneName: String, inputName: String, inputKind: String, inputSettings: OBSUntypedObject?, sceneItemEnabled: Bool?) async throws -> Int","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/removeinput(inputname:)","title":"func removeInput(inputName: String) async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/setinputname(inputname:newinputname:)","title":"func setInputName(inputName: String, newInputName: String) async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/getinputdefaultsettings(inputkind:)","title":"func getInputDefaultSettings(inputKind: String) async throws -> OBSUntypedObject","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/getinputsettings(inputname:)","title":"func getInputSettings(inputName: String) async throws -> OBSResponse.GetInputSettings","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/setinputsettings(inputname:inputsettings:overlay:)","title":"func setInputSettings(inputName: String, inputSettings: OBSUntypedObject, overlay: Bool?) async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/getinputmute(inputname:)","title":"func getInputMute(inputName: String) async throws -> Bool","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/setinputmute(inputname:inputmuted:)","title":"func setInputMute(inputName: String, inputMuted: Bool) async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/toggleinputmute(inputname:)","title":"func toggleInputMute(inputName: String) async throws -> Bool","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/getinputvolume(inputname:)","title":"func getInputVolume(inputName: String) async throws -> OBSResponse.GetInputVolume","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/setinputvolume(inputname:inputvolumemul:inputvolumedb:)","title":"func setInputVolume(inputName: String, inputVolumeMul: Double?, inputVolumeDb: Double?) async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/getinputaudiobalance(inputname:)","title":"func getInputAudioBalance(inputName: String) async throws -> Double","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/setinputaudiobalance(inputname:inputaudiobalance:)","title":"func setInputAudioBalance(inputName: String, inputAudioBalance: Double) async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/getinputaudiosyncoffset(inputname:)","title":"func getInputAudioSyncOffset(inputName: String) async throws -> Double","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/setinputaudiosyncoffset(inputname:inputaudiosyncoffset:)","title":"func setInputAudioSyncOffset(inputName: String, inputAudioSyncOffset: Double) async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/getinputaudiomonitortype(inputname:)","title":"func getInputAudioMonitorType(inputName: String) async throws -> String","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/setinputaudiomonitortype(inputname:monitortype:)","title":"func setInputAudioMonitorType(inputName: String, monitorType: String) async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/getinputaudiotracks(inputname:)","title":"func getInputAudioTracks(inputName: String) async throws -> OBSUntypedObject","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/setinputaudiotracks(inputname:inputaudiotracks:)","title":"func setInputAudioTracks(inputName: String, inputAudioTracks: OBSUntypedObject) async throws","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/getinputpropertieslistpropertyitems(inputname:propertyname:)","title":"func getInputPropertiesListPropertyItems(inputName: String, propertyName: String) async throws -> [OBSUntypedObject]","type":"method"},{"path":"\/documentation\/obsasyncapi\/obsclient\/pressinputpropertiesbutton(inputname:propertyname:)","title":"func pressInputPropertiesButton(inputName: String, propertyName: String) async throws","type":"method"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/obsasyncapi\/obsclient\/connectioninfo\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/obsasyncapi\/obsclient\/connectioninfo\/init(host:port:password:)","title":"init(host: String?, port: Int?, password: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/obsasyncapi\/obsclient\/connectioninfo\/host","title":"var host: String?","type":"property"},{"path":"\/documentation\/obsasyncapi\/obsclient\/connectioninfo\/password","title":"var password: String?","type":"property"},{"path":"\/documentation\/obsasyncapi\/obsclient\/connectioninfo\/port","title":"var port: Int?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/obsasyncapi\/obsclient\/connectioninfo\/wsurl()","title":"func wsURL() throws -> URL","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/obsasyncapi\/obsclient\/connectioninfo\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/obsasyncapi\/obsclient\/connectioninfo\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/obsasyncapi\/obsclient\/connectioninfo","title":"OBSClient.ConnectionInfo","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/obsasyncapi\/obsclient\/setconnectioninfo(_:)","title":"func setConnectionInfo(OBSClient.ConnectionInfo)","type":"method"}],"path":"\/documentation\/obsasyncapi\/obsclient","title":"OBSClient","type":"class"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/obsasyncapi\/apierror\/badwsurl","title":"case badWSURL","type":"case"},{"path":"\/documentation\/obsasyncapi\/apierror\/jsonparseerror(encapsulateerror:source:)","title":"case jsonParseError(encapsulateError: Error, source: String)","type":"case"},{"path":"\/documentation\/obsasyncapi\/apierror\/mismatchedresponse(request:got:)","title":"case mismatchedResponse(request: String, got: OBSResponse)","type":"case"},{"path":"\/documentation\/obsasyncapi\/apierror\/notconnected","title":"case notConnected","type":"case"},{"path":"\/documentation\/obsasyncapi\/apierror\/timeout","title":"case timeout","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/obsasyncapi\/apierror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/obsasyncapi\/apierror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/obsasyncapi\/apierror","title":"APIError","type":"enum"}],"path":"\/documentation\/obsasyncapi","title":"OBSAsyncAPI","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}